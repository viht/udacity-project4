version: 2.1

orbs:
  # orgs contain basic recipes and reproducible actions (install node, aws, eb, browser tools)
  node: circleci/node@5.2.0
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@4.1.3
  browser-tools: circleci/browser-tools@1.4.8
jobs:
  build:
    resource_class: large
    docker:
      - image: "cimg/node:20.11.1-browsers"
    steps:
      - eb/setup
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - run:
          name: Build Tools Information
          command: |
            echo "NODE Version: $(node --version)"
            echo "NPM Version: $(npm --version)"
            echo "Chrome Version: $(google-chrome --version)"
            echo "Chrome Driver Version: $(chromedriver --version)"
      - run:
          name: Install Front-End Dependencies
          command: npm run frontend:install
      - run:
          name: Install API Dependencies
          command: npm run api:install
      - run:
          name: Front-End Lint
          command: npm run frontend:lint
      - run:
          name: Front-End Test
          command: npm run frontend:test
      - run:
          name: Front-End Build
          command: npm run frontend:build
      - run:
          name: API Build
          command: npm run api:build
      - save_cache:
          name: Save Build Cache
          key: build-{{ .Branch }}-{{ .Revision }}
          paths:
            - "udagram/udagram-api/www"
            - "udagram/udagram-frontend/www"

  # deploy step will run only after manual approval
  deploy:
    resource_class: large
    docker:
      - image: "cimg/node:20.11.1"
    steps:
      - eb/setup
      - aws-cli/setup
      - checkout
      - restore_cache:
          name: Restore Build Cache
          keys:
            - build-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Config API Environment Variables
          command: npm run api:env
      - run:
          name: Deploy WEB and API
          command: |
            ls -la udagram/udagram-api
            ls -la udagram/udagram-frontend
            npm run deploy

workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
